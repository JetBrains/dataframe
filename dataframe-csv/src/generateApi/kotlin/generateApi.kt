import com.squareup.kotlinpoet.FileSpec
import java.io.File

fun main(args: Array<String>) {
    generateApi(args.first())
}

private fun generateApi(destination: String) {
    val destinationFolder = File(destination)
    if (!destinationFolder.exists()) {
        destinationFolder.mkdirs()
    }
    for (apiType in ApiType.entries) {
        val name = apiType.name.lowercase()
        val nameCapitalized = name.replaceFirstChar { it.uppercase() }
        val fileTypeTitle = apiType.fileTypeTitleStr
        val fileType = apiType.fileTypeStr

        generateReadFile(nameCapitalized, fileTypeTitle, fileType, apiType)
            .writeTo(destinationFolder)
        generateReadStrFile(nameCapitalized, fileTypeTitle, fileType, apiType)
            .writeTo(destinationFolder)
        generateWriteFile(nameCapitalized, fileTypeTitle, fileType, apiType)
            .writeTo(destinationFolder)
        generateToStrFile(nameCapitalized, fileTypeTitle, fileType, apiType)
            .writeTo(destinationFolder)
    }
    println("API generated to $destination")
}

internal val ApiType.fileTypeStr: String
    get() = when (this) {
        ApiType.CSV -> "csv"
        ApiType.TSV -> "tsv"
        ApiType.DELIM -> "delimiter-Separated Text"
    }

internal val ApiType.fileTypeTitleStr: String
    get() = when (this) {
        ApiType.CSV -> "CSV"
        ApiType.TSV -> "TSV"
        ApiType.DELIM -> "Delimiter-Separated Text"
    }

internal fun FileSpec.Builder.addFileComment(): FileSpec.Builder {
    addFileComment(
        """
        This file was autogenerated by the sourceSet `generateApi`
        and the Gradle task `executeGenerateApi`.
        Do not edit this file directly.
        """.trimIndent(),
    )
    return this
}

internal val InputType.dataStr: String
    get() = when (this) {
        InputType.FILE -> "file"
        InputType.URL -> "url"
        InputType.INPUT_STREAM -> "input stream"
        InputType.PATH -> "file"
        InputType.FILE_OR_URL -> "file or url"
    }

internal val InputType.dataTitleStr: String
    get() = when (this) {
        InputType.FILE -> "File"
        InputType.URL -> "Url"
        InputType.INPUT_STREAM -> "InputStream"
        InputType.PATH -> "File"
        InputType.FILE_OR_URL -> "File or Url"
    }
