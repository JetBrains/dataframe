FILE: schemaInfo.kt
    public abstract interface MySchema : R|kotlin/Any| {
        public abstract val a: R|kotlin/String|
            public get(): R|kotlin/String|

    }
    private final fun a(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Int_87>| {
        ^a R|kotlin/collections/listOf|<R|kotlin/Int|>(Int(1)).R|kotlin/let|<R|kotlin/collections/List<kotlin/Int>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Int_87>|>(<L> = fun <anonymous>(it: R|kotlin/collections/List<kotlin/Int>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Int_87>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class Int_87I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/Int_87I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Int_87I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsScope<<local>/Int_87I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Int_87 : R|<local>/Int_87I| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/ScopeProperty|() public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

                public constructor(): R|<local>/Int_87|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/toDataFrame|<R|kotlin/Int|>(<L> = toDataFrame@fun R|org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl<kotlin/Int>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
                (this@R|special/anonymous|, String(a)).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl.from: R|kotlin/Unit|>|<R|kotlin/Int|>(from@fun <anonymous>(it: R|kotlin/Int|): R|kotlin/Int| <inline=NoInline>  {
                    ^ R|<local>/it|
                }
                )
            }
            )
        }
        )
    }
    public final fun test(): R|kotlin/Unit| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_36>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(a))).R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/api/DataFrameBuilder|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_36>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/api/DataFrameBuilder|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_36>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class Invoke_36I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/Invoke_36I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Invoke_36I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsScope<<local>/Invoke_36I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Invoke_36 : R|<local>/Invoke_36I| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/ScopeProperty|() public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

                public constructor(): R|<local>/Invoke_36|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/DataFrameBuilder.invoke|(vararg(Int(123)))
        }
        )
        R|<local>/df|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_36>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_92>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_36>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Invoke_92>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class Invoke_92I : R|kotlin/Any| {
                public constructor(): R|<local>/Invoke_92I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope0|

            }

            local abstract class Invoke_92 : R|<local>/Invoke_92I| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/ScopeProperty|() public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

                public constructor(): R|<local>/Invoke_92|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/remove|<R|<local>/Invoke_36|>(<L> = remove@fun R|org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<<local>/Invoke_36>|.<anonymous>(it: R|org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<<local>/Invoke_36>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnsResolver<*>| <inline=NoInline>  {
                ^ (this@R|/test|, this@R|special/anonymous|).R|<local>/Scope0.a|
            }
            )
        }
        )
    }
