name: Show generated code in PR

on:
  pull_request:
    types:
      - edited
      - opened
      - synchronize
      - converted_to_draft
      - ready_for_review

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Configure Git User
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Run Gradle task
        run: ./gradlew :core:processKDocsMain korro

      - name: Check for changes in generated sources
        id: git-diff
        run: echo "::set-output name=changed::$(if git diff --quiet './core/generated-sources' './docs/StardustDocs/snippets' './docs/StardustDocs/topics'; then echo 'false'; else echo 'true'; fi)"

      - name: Commit and push if changes
        id: git-commit
        if: steps.git-diff.outputs.changed == 'true'
        run: |
          git checkout -b generated-sources/docs-update-${{ github.run_number }}
          git add './core/generated-sources' './docs/StardustDocs/snippets' './docs/StardustDocs/topics'
          git commit -m "Update generated sources with recent changes"
          git push origin generated-sources/docs-update-${{ github.run_number }}
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Remove old comments
        uses: actions/github-script@v5
        if: steps.git-diff.outputs.changed == 'true'
        with:
          # language=js
          script: |
            const issue_number = context.issue.number;
            const {owner, repo} = context.repo;
            
            const comments = await github.rest.issues.listComments({
                issue_number,
                owner,
                repo,
            });
            
            const botComments = comments.data.filter(
                (comment) => comment.user.login === 'github-actions[bot]'
            );
            
            for (const comment of botComments) {
                await github.rest.issues.deleteComment({
                    comment_id: comment.id,
                    owner,
                    repo,
                });
            }

      - name: Add comment to PR
        uses: actions/github-script@v5
        if: steps.git-diff.outputs.changed == 'true'
        with:
          # language=js
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Generated sources will be updated after merging this PR.\nPlease inspect the changes in [here](https://github.com/${{ github.repository }}/commit/${{ steps.git-commit.outputs.commit }}).",
            });
